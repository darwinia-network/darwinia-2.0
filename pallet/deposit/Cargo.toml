[package]
authors     = ["Darwinia Network <hello@darwinia.network>"]
description = "Darwinia deposit mechanism implementation."
edition     = "2021"
homepage    = "https://darwinia.network"
license     = "GPL-3.0"
name        = "darwinia-deposit"
readme      = "README.md"
repository  = "https://github.com/darwinia-network/darwinia"
version     = "6.0.0"

[dependencies]
# crates.io
codec      = { package = "parity-scale-codec", version = "3.2", default-features = false, features = ["derive"] }
scale-info = { version = "2.3", default-features = false }

# darwinia
darwinia-staking = { default-features = false, path = "../staking" }
dc-inflation     = { default-features = false, path = "../../core/inflation" }
dc-types         = { path = "../../core/types" }

# subtrate
frame-support = { default-features = false, git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.33" }
frame-system  = { default-features = false, git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.33" }
sp-core       = { default-features = false, git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.33" }
sp-runtime    = { default-features = false, git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.33" }
sp-std        = { default-features = false, git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.33" }

[dev-dependencies]
# substrate
pallet-assets    = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.33" }
pallet-balances  = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.33" }
pallet-timestamp = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.33" }
sp-io            = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.33" }

[features]
default = ["std"]
std = [
	# crates.io
	"codec/std",
	"scale-info/std",

	# darwinia
	"darwinia-staking/std",
	"dc-inflation/std",

	# subtrate
	"frame-support/std",
	"frame-system/std",
	"sp-core/std",
	"sp-runtime/std",
	"sp-std/std",
]

# TODO: runtime-benchmarks, try-runtime
